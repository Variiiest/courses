<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>String Data structure</title>
  <!-- Favicon -->
  <link href="../assets/img/favicon.png" rel="icon" type="image/png">
  <!-- Fonts -->
  <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700" rel="stylesheet">
  <!-- Icons -->
  <link href="../assets/vendor/nucleo/css/nucleo.css" rel="stylesheet">
  <link href="../assets/vendor/@fortawesome/fontawesome-free/css/all.min.css" rel="stylesheet">
  <!-- ocollege CSS -->
  <link type="text/css" href="../assets/css/ocollege.css?v=1.0.0" rel="stylesheet">
</head>

<body style="align-self: auto">
  <!-- Sidenav -->
  <nav class="navbar navbar-vertical fixed-left navbar-expand-md navbar-light bg-white" id="sidenav-main">
    <div class="container-fluid">
      <!-- Toggler -->
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#sidenav-collapse-main" aria-controls="sidenav-main" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <!-- Brand -->
      <a class="navbar-brand pt-0" href="../index.html">
        <img src="../assets/img/untitled.png" class="navbar-brand-img" alt="...">
      </a>
      <!-- Collapse -->
      <div class="collapse navbar-collapse" id="sidenav-collapse-main">
        <!-- Collapse header -->
        <div class="navbar-collapse-header d-md-none">
          <div class="row">
            <div class="col-6 collapse-brand">
             
            </div>
            <div class="col-6 collapse-close">
              <button type="button" class="navbar-toggler" data-toggle="collapse" data-target="#sidenav-collapse-main" aria-controls="sidenav-main" aria-expanded="false" aria-label="Toggle sidenav">
                <span></span>
                <span></span>
              </button>
            </div>
          </div>
        </div>
        
        <!-- Form -->
        
         <!-- Navigation -->
          <a href="array-ds.htm">PREVIOUS</a>
            <hr class="my-1">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link" href="../c-programming/strings-in-c.html">
              <i class="fa fa-code"></i>Basic
            </a>
          </li>
            <li class="nav-item">
            <a class="nav-link" href="#appending">
              <i class="fa fa-code"></i>Appending
            </a>
          </li>
            <li class="nav-item">
            <a class="nav-link" href="#comparing">
              <i class="fa fa-code"></i>Comparing

            </a>
          </li>
              <li class="nav-item">
            <a class="nav-link" href="#reversing">
              <i class="fa fa-code"></i>Reversing
            </a>
          </li>
            <li class="nav-item">
            <a class="nav-link" href="#deleting">
              <i class="fa fa-code"></i>Deleting
            </a>
          </li>
            <li class="nav-item">
            <a class="nav-link" href="#inserting">
              <i class="fa fa-code"></i>Inserting
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#interchanging">
              <i class="fa fa-code"></i>Interchanging
            </a>
          </li>
             <li class="nav-item">
            <a class="nav-link" href="">
              <i class="fa fa-code"></i>Z-Algorithm Implemation
            </a>
          </li>
             <li class="nav-item">
            <a class="nav-link" href="">
              <i class="fa fa-code"></i>KMP Algorithm Implemation
            </a>
          </li>
             <li class="nav-item">
            <a class="nav-link" href="">
              <i class="fa fa-code"></i>Brute-Force Algorithm Implemation
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#example">
              <i class="fa fa-code"></i>Examples
            </a>
          </li>
        </ul>
      </div>
    </div>
  </nav>
  <div class="main-content">
    <!-- Top navbar -->
    <nav class="navbar navbar-top navbar-expand-md navbar-dark" id="navbar-main">
      <div class="container-fluid">
        <!-- Brand -->
        <a class="h4 mb-0 text-white text-uppercase d-none d-lg-inline-block" href="">String</a>
        
      </div>
    </nav>
    <!-- Header -->
    <div class="header bg-primary pb-8">
      <div class="container-fluid">
        <div class="header-body">
          <!-- Card stats -->
         
        </div>
      </div>
    </div>
    <!-- Page content -->
    <div id="appending" class="container-fluid">  
      <div class="row mt-3 ">
        <div class="col">
          <div class="card bg-default shadow">
            <div class="card-header bg-transparent border-0">
              <h3 class="text-white mb-0">Appending</h3>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Table -->
      <div class="row">
        <div class="col">
          <div class="card shadow">
            <div class="card-header bg-transparent">
                         <video autoplay  style="max-width: 100%">
  <source src="Presentation4.mp4" type="video/mp4">
</video>
      <div style="background: #ffffff; overflow:auto;width:auto;border:solid blue;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #0000ff">#include &lt;stdio.h&gt;</span>
<span style="color: #0000ff">#include &lt;stdlib.h&gt;</span>
<span style="color: #2b91af">int</span> main(<span style="color: #2b91af">int</span> argc, <span style="color: #2b91af">char</span> *argv[]) {
	<span style="color: #2b91af">char</span> string[100],append_string[100];
	<span style="color: #2b91af">int</span> i,j;
	gets(string);
	gets(append_string);
	<span style="color: #0000ff">for</span>(i=0;string[i]!=<span style="color: #a31515">&#39;\0&#39;</span>;i++);
    <span style="color: #0000ff">for</span>(j=0;string[j]!=<span style="color: #a31515">&#39;\0&#39;</span>;i++,j++)
    {
    	append_string[i]=string[j];
	}
	append_string[i]=<span style="color: #a31515">&#39;\0&#39;</span>;
	printf(<span style="color: #a31515">&quot;%s&quot;</span>,append_string);
	<span style="color: #0000ff">return</span> 0;
}
</pre></div>
</div>
            </div>
              </div>
            </div>
              <div id="comparing">  
      <div class="row mt-3 ">
        <div class="col">
          <div class="card bg-default shadow">
            <div class="card-header bg-transparent border-0">
              <h3 class="text-white ">Comparing</h3>
            </div>
          </div>
        </div>
      </div>
      
               <div class="row">
        <div class="col">
          <div class="card shadow">
            <div class="card-header bg-transparent">
                 <video autoplay style="max-width: 100%">
  <source src="Presentation3.mp4" type="video/mp4">
</video>
        <div style="background: #ffffff; overflow:auto;width:auto;border:solid blue;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #0000ff">#include &lt;stdio.h&gt;</span>
<span style="color: #0000ff">#include &lt;stdlib.h&gt;</span>

<span style="color: #008000">/* run this program using the console pauser or add your own getch, system(&quot;pause&quot;) or input loop */</span>

<span style="color: #2b91af">int</span> main(<span style="color: #2b91af">int</span> argc, <span style="color: #2b91af">char</span> *argv[]) {
	<span style="color: #2b91af">char</span> string[100],second_string[100];
	<span style="color: #2b91af">int</span> i,j,k=0;
	gets(string);
	gets(second_string);
	<span style="color: #0000ff">for</span>(i=0;string[i]!=<span style="color: #a31515">&#39;\0&#39;</span>;i++);
    <span style="color: #0000ff">for</span>(j=0;second_string[j]!=<span style="color: #a31515">&#39;\0&#39;</span>;j++);
    printf(<span style="color: #a31515">&quot;%d %d&quot;</span>,i,j);
    <span style="color: #0000ff">if</span>(i==j)
    {
    	<span style="color: #0000ff">for</span>(k=0;k&lt;i;k++)
    	{
    		<span style="color: #0000ff">if</span>(string[k]==second_string[k])
    		k++;
    		<span style="color: #0000ff">else</span>
    		<span style="color: #0000ff">break</span>;
		}
	    <span style="color: #0000ff">if</span>(k==i)
     	{
		printf(<span style="color: #a31515">&quot;String are equal&quot;</span>);
	    }
       <span style="color: #0000ff">else</span>
       printf(<span style="color: #a31515">&quot;String doesn&#39;t match&quot;</span>);
   }
   <span style="color: #0000ff">else</span> <span style="color: #0000ff">if</span>(i&gt;j)
     printf(<span style="color: #a31515">&quot;String1 one is greater than string 2 &quot;</span>);
   <span style="color: #0000ff">else</span>
     printf(<span style="color: #a31515">&quot;String2 one is greater than string 1 &quot;</span>);  
	<span style="color: #0000ff">return</span> 0;
    }
</pre></div>

           </div>
            </div>
                 <div id=reversing>  
      <div class="row mt-3 ">
        <div class="col">
          <div class="card bg-default shadow">
            <div class="card-header bg-transparent border-0">
              <h3 class="text-white ">Reversing</h3>
            </div>
          </div>
        </div>
      </div>        
    </div>
      <!-- Table -->
      <div class="row">
        <div class="col">
          <div class="card shadow">
            <div class="card-header bg-transparent">
         <div style="background: #ffffff; overflow:auto;width:auto;border:solid blue;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #0000ff">#include &lt;stdio.h&gt;</span>
<span style="color: #0000ff">#include &lt;conio.h&gt;</span>
<span style="color: #0000ff">#include &lt;string.h&gt;</span>
 <span style="color: #2b91af">int</span> main() 
 {
   <span style="color: #2b91af">char</span> str[100], reverse_str[100], temp;
   <span style="color: #2b91af">int</span> i=0, j=0,k;
   printf(<span style="color: #a31515">&quot;\n Enter the string : &quot;</span>); 
   gets(str);
   <span style="color: #0000ff">for</span>(k=0;str[k]!=<span style="color: #a31515">&#39;\0&#39;</span>;k++); 
   j = k-1;
   <span style="color: #0000ff">while</span>(i &lt; j)
    {
	  temp = str[j];
	  str[j]=str[i];
	  str[i]=temp;
	  i++;
	  j--;
    }
   printf(<span style="color: #a31515">&quot;The reversed string:&quot;</span>);
   puts(str);
}
</pre></div>

  </div>
      </div>
            <div id="deleting" class="main-content">
     <div class="row mt-3 ">
        <div class="col">
          <div class="card bg-default shadow">
            <div class="card-header bg-transparent border-0">
              <h3 class="text-white mb-0">Deleting</h3>
            </div>
          </div> 
        </div>
      </div>
      
      <!-- Table -->
      <div class="row">
        <div class="col">
          <div class="card shadow">
            <div class="card-header bg-transparent">
  <div style="background: #ffffff; overflow:auto;width:auto;border:solid blue;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #0000ff">#include &lt;stdio.h&gt;</span>
<span style="color: #0000ff">#include &lt;conio.h&gt; </span>
<span style="color: #2b91af">int</span> main() 
{ 
  <span style="color: #2b91af">char</span> string[100],del_string[100],new_string[100];
  <span style="color: #2b91af">int</span> i=0,j=0,f=0,n=0,k,l=0;
  printf(<span style="color: #a31515">&quot;Enter the main text: &quot;</span>);
  gets(string);
  printf(<span style="color: #a31515">&quot;Enter the string to delete:&quot;</span>);
  gets(del_string);
  <span style="color: #0000ff">while</span>(string[i]!=<span style="color: #a31515">&#39;\0&#39;</span>)
  {
    j=0,f=0,k=i;
  	<span style="color: #0000ff">while</span>(string[k]==del_string[j] &amp;&amp; del_string[j]!=<span style="color: #a31515">&#39;\0&#39;</span>)
  	{
  		k++;
  		j++;
	 }
	 <span style="color: #0000ff">if</span>(del_string[j]==<span style="color: #a31515">&#39;\0&#39;</span>)
	     l=k;
	  new_string[n]=string[l];
	  i++;
	  n++;
  }
  new_string[n]=<span style="color: #a31515">&#39;\0&#39;</span>;
  printf(<span style="color: #a31515">&quot;The new string:&quot;</span>);
  puts(new_string);
  
}
</pre></div>

          </div>
                        </div>
              <div id="inserting" class="row mt-3">
        <div class="col">
          <div class="card bg-default shadow">
            <div class="card-header bg-transparent border-0">
              <h3 class="text-white mb-0">Inserting</h3>
            </div>
          </div> 
        </div>
      </div>
      <!-- Table -->
      <div class="row">
        <div class="col">
          <div class="card shadow">
            <div class="card-header bg-transparent">
            <pre>#include &lt;stdio.h>
#include &lt;conio.h> 
int main() 
{ 
  char text[100], str[20], ins_text[100];
  int i=0, j=0, k=0,pos;
  printf("\n Enter the main text : "); 
  gets(text); 
  printf("\n Enter the string to be inserted : "); 
  gets(str); 
  printf("\n Enter the position at which the string has to be inserted: "); 
  scanf("%d", &pos); 
  while(text[i]!= '\0')
  {  
   if(i==pos)  
   {   
     while(str[k] != '\0')
	    {    
		ins_text[j] = str[k];
		    j++;
			k++;
	     } 
    }  
	else  
	{  
	 ins_text[j] = text[i];
	    j++;
    } 
	 i++;
    } 
	ins_text[j] = '\0';
	 printf("\n The new string is : ");
	puts(ins_text);
}</pre>                             
           </div>
            </div>
               <div id="interchanging" class="row mt-3 ">
        <div class="col">
          <div class="card bg-default shadow">
            <div class="card-header bg-transparent border-0">
              <h3 class="text-white mb-0">Interchanging</h3>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Table -->
      <div class="row">
        <div class="col">
          <div class="card shadow">
            <div class="card-header bg-transparent">
            <pre>#include &lt;stdio.h>
#include &lt;conio.h> 
int main() 
{ 
  char string[100],del_string[100],rep_string[100],new_string[100];
  int i=0,j=0,f=0,n=0,k,l=0;
  printf("Enter the main text: ");
  gets(string);
  printf("Enter the string to be replaced:");
  gets(del_string);
  printf("Enter the string to replace ");
  gets(rep_string);
  while(string[i]!='\0')
  {
    j=0,k=i;
  	while(string[k]==del_string[j] && del_string[j]!='\0')
  	{
  		k++;
  		j++;
	 }
	 if(del_string[j]=='\0')
	   {
		  l=k;
	     while(rep_string[f])
	    {
	      new_string[n]=rep_string[f];
	      f++;
	      n++;
	     }
	}
	new_string[n]=string[l];
	i++;
	l++;
	n++;
  }
  new_string[n]='\0';
  printf("The new string:");
  puts(new_string);  
}</pre>
                 </div>
    </div>
                        <div id="example" class="row mt-3 ">
        <div class="col">
          <div class="card bg-default shadow">
            <div class="card-header bg-transparent border-0">
              <h3 class="text-white mb-0">Examples</h3>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Table -->
      <div class="row">
        <div class="col">
          <div class="card shadow">
            <div class="card-header bg-transparent">
                <h3>UPDATING SOON</h3>
                <ul><li><a href="#">Pangram checking</a></li>
                <li><a href="#">Lipogram checking</a></li>
                <li><a href="#">Anagram checking</a></li>
                <li><a href="#">Lexiographic order</a></li>
                <li><a href="#">Word count/Line count/Charecter count </a></li>
                <li><a href="#">String Palindrome</a></li>
                <li><a href="#">Lower to uppercase</a></li>
                <li><a href="#">Space removal program </a></li>
                <li><a href="#">String copying</a></li>
                <li><a href="#">
Basics of String Manipulation
</a></li>
                <li><a href="#">String Searching</a></li>
                <li><a href="#">
Z Algorithm</a></li>
                    <li><a href="#">
                        Manachar’s Algorithm</a></li>
                    <li><a href="#">
                         Brute	Force	Method </a></li>
                    <li><a href="#">
                        Rabin-Karp	String	Matching	Algorithm
</a></li>
                    <li><a href="#">
                        Boyer-Moore	Algorithm</a></li>
                    <li><a href="#">
                        KMP	Algorithm</a></li>
                    </ul>
         
                
                 <div class="row align-items-center ">
                <div class="col text-right">
                <a href="linked-list.htm" class="btn btn-sm btn-primary">NEXT TUTORIAL</a>
            </div>
                      </div>
            </div>
                         </div>
                        </div>
                       </div>
                      </div>
                     </div>
                    </div>
                    </div>
                   </div>
                  </div>
                 </div>
                </div>
              </div>
             </div>
          </div>
                   </div>
                  </div>
        </div>
      
  <!-- ocollege Scripts -->
  <!-- Core -->
  <script src="../assets/vendor/jquery/dist/jquery.min.js"></script>
  <script src="../assets/vendor/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
  <!-- ocollege JS -->
  <script src="../assets/js/ocollege.js?v=1.0.0"></script>
    
</body>

</html>